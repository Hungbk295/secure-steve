import { Card } from "antd";
import { useMemo } from "react";
import CustomPieChart from "@/app/components/common/CustomPieChart";

interface MalwareFamilyData {
  family: string;
  count: number;
}

interface MalwareDetectionStatusCardProps {
  data?: MalwareFamilyData[];
  onFamilyClick?: (family: string) => void;
}

const DEFAULT_DATA: MalwareFamilyData[] = [
  { family: "패밀리1", count: 126 },
  { family: "패밀리2", count: 52 },
  { family: "패밀리3", count: 20 },
  { family: "패밀리4", count: 13 },
];

function MalwareDetectionStatusCard({
  data = DEFAULT_DATA,
  onFamilyClick,
}: MalwareDetectionStatusCardProps) {
  const chartData = useMemo(() => {
    const labels = data.map(item => item.family);
    const values = data.map(item => item.count);
    const total = values.reduce((sum, value) => sum + value, 0);

    return {
      labels,
      datasets: [
        {
          label: "Malware Family Distribution",
          data: values,
          backgroundColor: [
            "#1890ff", // Blue
            "#fa8c16", // Orange
            "#52c41a", // Green
            "#13c2c2", // Cyan
            "#722ed1", // Purple
            "#eb2f96", // Magenta
          ],
          borderWidth: 2,
          borderColor: "#ffffff",
          hoverBorderWidth: 3,
        },
      ],
      total,
    };
  }, [data]);

  const chartOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'bottom' as const,
        labels: {
          padding: 20,
          usePointStyle: true,
          pointStyle: 'circle',
          generateLabels: function(chart: any) {
            const data = chart.data;
            if (data.labels.length && data.datasets.length) {
              return data.labels.map((label: string, i: number) => {
                const value = data.datasets[0].data[i];
                const total = chartData.total;
                const percentage = ((value / total) * 100).toFixed(1);
                return {
                  text: `${label}: ${value} (${percentage}%)`,
                  fillStyle: data.datasets[0].backgroundColor[i],
                  strokeStyle: data.datasets[0].backgroundColor[i],
                  lineWidth: 0,
                  pointStyle: 'circle',
                  hidden: false,
                  index: i
                };
              });
            }
            return [];
          }
        },
      },
      title: {
        display: false,
      },
      tooltip: {
        callbacks: {
          label: function(context: any) {
            const label = context.label || '';
            const value = context.parsed;
            const total = chartData.total;
            const percentage = ((value / total) * 100).toFixed(1);
            return `${label}: ${value} (${percentage}%)`;
          }
        }
      }
    },
    cutout: '60%',
    onClick: (event: any, elements: any[]) => {
      if (elements.length > 0 && onFamilyClick) {
        const index = elements[0].index;
        const family = data[index].family;
        onFamilyClick(family);
      }
    },
  };

  return (
    <Card 
      title="멀웨어 탐지 현황" 
      size="small"
    >
      <div className="relative">
        <CustomPieChart
          labels={chartData.labels}
          datasets={chartData.datasets}
          options={chartOptions}
          onClick={(event, elements) => {
            if (elements.length > 0 && onFamilyClick) {
              const index = elements[0].index;
              const family = data[index].family;
              onFamilyClick(family);
            }
          }}
        />
        
        {/* Center text showing total */}
        <div className="absolute inset-0 flex items-center justify-center pointer-events-none">
          <div className="text-center">
            <div className="text-2xl font-bold text-gray-800">{chartData.total}</div>
            <div className="text-sm text-gray-500">Total</div>
          </div>
        </div>
      </div>
    </Card>
  );
}

export default MalwareDetectionStatusCard;
