import { Card } from "antd";
import { Pie } from "@ant-design/plots";
import { useAppSelector } from "@/store";
import { selectMalwareFamilyChart } from "@/store/dashboardSlice";

interface MalwareFamilyChartProps {
  loading: boolean;
}

const MalwareFamilyChart: React.FC<MalwareFamilyChartProps> = ({ loading }) => {
  const malwareFamilyData = useAppSelector(selectMalwareFamilyChart);
  const chartData =
    malwareFamilyData?.labels?.map((label, index) => ({
      type: label,
      value: malwareFamilyData.series[index],
    })) || [];

  const config = {
    data: chartData,
    angleField: "value",
    colorField: "type",
    radius: 0.8,
    label: {
      type: "inner",
      offset: "-50%",
      content: "{percentage}",
      style: {
        textAlign: "center",
        fontSize: 12,
        fontWeight: "bold",
        fill: "white",
      },
    },
    legend: {
      position: "bottom" as const,
      itemName: {
        style: {
          fontSize: 12,
        },
      },
    },
    color: ["#1890ff", "#52c41a", "#faad14", "#f5222d"],
    tooltip: {
      formatter: (datum: any) => {
        const total = chartData.reduce((sum, item) => sum + item.value, 0);
        const percentage = Math.round((datum.value / total) * 100);
        return {
          name: datum.type,
          value: `${datum.value} (${percentage}%)`,
        };
      },
    },
  };

  return (
    <Card
      loading={loading}
      title="멀웨어 탐지 현황"
      className="malware-family-chart-card h-full"
      style={{
        backgroundColor: "var(--color-bg-secondary)",
        border: "1px solid var(--color-border-100)",
        borderRadius: "8px",
      }}
    >
      <div className="h-80">
        {chartData.length > 0 ? (
          <Pie {...config} />
        ) : (
          <div className="flex items-center justify-center h-full text-gray-500">
            No malware family data available
          </div>
        )}
      </div>
    </Card>
  );
};

export default MalwareFamilyChart;
